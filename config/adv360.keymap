#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick_tap_ms = <175>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            hold-trigger-on-release;
            hold-trigger-key-positions = <7 8 9 10 11 12 13 21 22 23 24 25 26 27 37 38 39 40 41 42 43 44 45 53 54 55 56 57 58 59 68 69 70 71 72 73 74 75 35 36 37 52 65 66 67>;
            quick-tap-ms = <150>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick_tap_ms = <175>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            hold-trigger-on-release;
            quick-tap-ms = <150>;
            hold-trigger-key-positions = <52 53 65 66 67 68 69 70 0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 34 35 36 37 46 47 48 49 50 51 60 61 62 63 64 65 66 38>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt TILDE GRAVE  &mt EXCLAMATION NUMBER_1  &mt AT_SIGN NUMBER_2  &mt HASH NUMBER_3      &mt DOLLAR NUMBER_4  &mt PERCENT N5  &kp F11                                                                             &kp F12                        &mt CARET NUMBER_6  &mt AMPERSAND N7    &mt ASTERISK N8       &mt LEFT_PARENTHESIS N9  &mt RIGHT_PARENTHESIS N0  &caps_word
&kp TAB          &kp Q                     &kp W                 &kp E                  &kp R                &kp T           &mt LEFT_BRACE LEFT_BRACKET                                                         &mt RIGHT_BRACE RIGHT_BRACKET  &kp Y               &kp U               &kp I                 &kp O                    &kp P                     &kp BSLH
&lt 1 ESC        &hml LEFT_GUI A           &hml LEFT_ALT S       &hml LEFT_CONTROL D    &hml LEFT_SHIFT F    &kp G           &kp MINUS                    &kp LCTRL      &kp LALT      &kp RIGHT_ALT  &kp RCTRL  &kp EQUAL                      &kp H               &hmr RIGHT_SHIFT J  &hmr RIGHT_CONTROL K  &hmr LEFT_ALT L          &mt COLON SEMICOLON       &kp SQT
&kp LSHFT        &kp Z                     &kp X                 &kp C                  &kp V                &kp B                                                       &kp HOME      &kp PAGE_UP                                              &kp N               &kp M               &mt LESS_THAN COMMA   &mt GREATER_THAN PERIOD  &mt QUESTION SLASH        &kp RSHFT
&mo 1            &tog 2                    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_GUI                         &kp SPACE                    &kp BACKSPACE  &kp END       &kp PG_DN      &kp ENTER  &kp SPACE                                          &kp LEFT            &kp DOWN              &kp UP_ARROW             &kp RIGHT_ARROW           &tog 3
            >;
        };

        fn {
            bindings = <
&kp CLCK  &kp F1              &kp F2              &kp F3              &kp F4              &kp F5  &trans                                          &trans  &kp F6                      &kp F7                      &kp F8                    &kp F9                       &kp F10             &trans
&trans    &kp PRINTSCREEN     &kp LG(UP_ARROW)    &kp LG(E)           &trans              &trans  &none                                           &none   &kp HOME                    &kp LC(HOME)                &kp LC(END)               &kp END                      &trans              &trans
&trans    &kp LG(LEFT)        &kp LG(DOWN_ARROW)  &kp LG(RIGHT)       &kp LS(LG(GRAVE))   &trans  &none       &trans  &trans      &trans  &trans  &none   &kp LEFT_ARROW              &kp DOWN_ARROW              &kp UP_ARROW              &kp RIGHT_ARROW              &kp LC(LEFT_ARROW)  &kp LC(RIGHT_ARROW)
&trans    &trans              &trans              &trans              &trans              &trans                      &trans      &trans                  &kp LS(LC(LA(LEFT_ARROW)))  &kp LS(LA(LC(DOWN_ARROW)))  &kp LS(LC(LA(UP_ARROW)))  &kp LS(LC(LA(RIGHT_ARROW)))  &trans              &trans
&trans    &kp LS(LC(LA(F1)))  &kp LS(LA(LC(F2)))  &kp LC(LS(LA(F3)))  &kp LA(LS(LC(F4)))          &kp DELETE  &trans  &trans      &trans  &trans  &trans                              &trans                      &trans                    &trans                       &trans              &trans
            >;
        };

        keypad {
            bindings = <
&kp EQUAL     &kp N1  &kp N2    &kp N3    &kp N4     &kp N5  &kp LEFT_PARENTHESIS                                                 &kp RIGHT_PARENTHESIS  &kp N6  &kp KP_CLEAR  &kp KP_MULTIPLY  &kp KP_SLASH  &kp KP_MINUS  &kp MINUS
&kp TAB       &kp Q   &kp W     &kp E     &kp R      &kp T   &none                                                                &none                  &kp Y   &kp KP_N7     &kp KP_N8        &kp KP_N9     &kp KP_PLUS   &kp BSLH
&lt 1 ESCAPE  &kp A   &kp S     &kp D     &kp F      &kp G   &kp MINUS             &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &kp EQUAL              &kp H   &kp KP_N4     &kp KP_N5        &kp KP_N6     &kp KP_PLUS   &kp SQT
&kp LSHFT     &kp Z   &kp X     &kp C     &kp V      &kp B                                    &kp HOME      &kp PG_UP                                    &kp N   &kp KP_N1     &kp KP_N2        &kp KP_N3     &kp KP_ENTER  &kp RSHFT
&mo 1         &tog 2  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC              &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp KP_N0                      &kp LEFT      &kp KP_N0        &kp KP_DOT    &kp RBKT      &mo 3
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &tog 3
            >;
        };
    };
};
